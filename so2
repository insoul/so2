#!/usr/bin/env ruby
require 'optparse'
require 'ostruct'
require 'yaml'
require 'pry'
$LOAD_PATH << File.expand_path('../lib', __FILE__)

SO2_ROOT = "#{File.expand_path('..', __FILE__)}"
SO2_SETTING_FILE = "#{SO2_ROOT}/setting.yml"
begin
  SO2_SETTING = YAML.load_file(SO2_SETTING_FILE)
rescue Errno::ENOENT
  puts "There is not #{SO2_SETTING_FILE}"
  exit
end

SO2_CONFIG_FILE = "#{Dir.pwd}/.so2.yml"
begin
  SO2_CONFIG = YAML.load_file(SO2_CONFIG_FILE)
rescue Errno::ENOENT
  puts "There is not #{SO2_CONFIG_FILE}"
  SO2_CONFIG = {}
end

@available_subcommand = Dir.entries("#{SO2_ROOT}/subcommands").select { |f|
  File.file?(File.join("#{SO2_ROOT}/subcommands",f))
}.map {|f| f.gsub("\.rb", "")}

def puts_available_subcommand
  puts "The available commands are:"
  @available_subcommand.each do |f|
    puts "\t#{f.gsub("\.rb", "")}"
  end
end

subcommand = ARGV.shift
if ["--help", "-h", "", nil].include? subcommand
  puts "usage: so2 [-h|--help] <command> [<args>]"
  puts ""
  puts_available_subcommand
  exit
end

unless @available_subcommand.include? subcommand
  puts "ERROR: Unknown subcommand #{subcommand}"
  puts ""
  puts_available_subcommand
  exit
end

subcommand_file = File.expand_path("../subcommands/#{subcommand}.rb", __FILE__)
require subcommand_file
